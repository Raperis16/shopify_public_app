{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Edijs\\\\Documents\\\\GitHub\\\\shopify-app-with-navigation\\\\screens\\\\ProductPage.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nimport shopClient from \"../constants/shopify\";\nexport default function ProductPage(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Product = _React$useState2[0],\n      SetProduct = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Quantitiy = _React$useState4[0],\n      SetQuantity = _React$useState4[1];\n\n  React.useEffect(function () {\n    mapData();\n  }, []);\n  console.log(route.params.itemId);\n\n  var mapData = function mapData() {\n    shopClient.product.fetch(route.params.itemId).then(function (product) {\n      console.log(product);\n      var productData = [{\n        id: 0,\n        images: []\n      }];\n      productData = [].concat(_toConsumableArray(productData), [product]);\n      SetProduct(productData);\n    });\n  };\n\n  var ProductTile = function ProductTile(_ref2) {\n    var item = _ref2.item;\n\n    if (item.id === 0) {\n      null;\n    } else {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, item.title), React.createElement(Image, {\n        source: {\n          uri: item.images[0].src\n        },\n        style: {\n          height: 200,\n          width: 200\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }\n      }, \"Description: \"), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, item.description), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return SetQuantity(Quantitiy + 1);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }\n      }, \"Qnt: \", Quantitiy)));\n    }\n  };\n\n  if (Product != null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, React.createElement(FlatList, {\n      data: Product,\n      renderItem: ProductTile,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      style: {\n        paddingTop: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Edijs/Documents/GitHub/shopify-app-with-navigation/screens/ProductPage.tsx"],"names":["StatusBar","React","TouchableOpacity","shopClient","ProductPage","navigation","route","useState","Product","SetProduct","Quantitiy","SetQuantity","useEffect","mapData","console","log","params","itemId","product","fetch","then","productData","id","images","ProductTile","item","title","uri","src","height","width","description","styles","container","paddingTop","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { FlatList, Image, StyleSheet, Text, View } from 'react-native';\r\nimport { TouchableOpacity } from 'react-native-gesture-handler';\r\n\r\nimport shopClient from '../constants/shopify'\r\n\r\nexport default function ProductPage({ navigation, route }) {\r\n  const [Product, SetProduct] = React.useState([])\r\n  const [Quantitiy, SetQuantity] = React.useState(1)\r\n\r\n  React.useEffect(() => {\r\n    mapData()\r\n  }, [])\r\n\r\n  console.log(route.params.itemId)\r\n  \r\n\r\n  // Fetch all products in your shop and map it to a state\r\nconst mapData = () => {\r\n  // Fetching hapens here\r\n  shopClient.product.fetch(route.params.itemId).then((product) => {\r\n\r\n    console.log(product)\r\n\r\n    let productData = [{id: 0, images:[]}]\r\n\r\n\r\n    // let ProductData = {\r\n    //         title: product.title,\r\n    //         available: product.available,\r\n    //         description: product.description,\r\n    //         images: product.images[0].src,\r\n    //         id: product.id\r\n    // }\r\n\r\n    productData = [...productData, product]\r\n    SetProduct(productData)\r\n})}\r\n\r\nconst ProductTile = ({item}) => {\r\n\r\n  if(item.id === 0){\r\n      null\r\n  }else{\r\n    return(\r\n        <View>\r\n          <Text>{item.title}</Text>\r\n          <Image source={{uri: item.images[0].src}} style={{height: 200, width: 200}}/>\r\n          <Text>Description: </Text>\r\n          <Text>{item.description}</Text>\r\n\r\n          <TouchableOpacity onPress={() => SetQuantity(Quantitiy+1)}>\r\n            <Text>Qnt: {Quantitiy}</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n    )\r\n  }\r\n}\r\n\r\n  if(Product!=null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <FlatList \r\n          data={Product}\r\n          renderItem={ProductTile}\r\n          keyExtractor={item => item.id}\r\n          style={{paddingTop: 50}}\r\n        />\r\n        <StatusBar style=\"auto\" />\r\n      </View>\r\n    );\r\n  }else{\r\n    return(\r\n      <View>\r\n\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}