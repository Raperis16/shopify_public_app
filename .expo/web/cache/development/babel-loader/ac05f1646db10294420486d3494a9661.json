{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Edijs\\\\Documents\\\\GitHub\\\\shopify-app-with-navigation\\\\screens\\\\ProductPage.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport shopClient from \"../constants/shopify\";\nexport default function ProductPage(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Product = _React$useState2[0],\n      SetProduct = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Quantitiy = _React$useState4[0],\n      SetQuantity = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      CheckoutID = _React$useState6[0],\n      SetCheckoutID = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      MyCheckout = _React$useState8[0],\n      SetMyCheckout = _React$useState8[1];\n\n  React.useEffect(function () {\n    mapData();\n  }, []);\n  console.log(route.params.itemId);\n\n  function AddToCart() {\n    CreateCheckout(SetCheckoutID);\n    var lineItemsToAdd = [{\n      variantId: item.variants,\n      quantity: Quantitiy\n    }];\n    var checkoutItems = [];\n    var checkItem = {};\n    shopClient.checkout.addLineItems(CheckoutID, lineItemsToAdd).then(function (checkout) {\n      for (var c = 0; c < checkout.lineItems.length; c++) {\n        checkItem = {\n          title: checkout.lineItems[c].title\n        };\n        console.log(checkout.lineItems[c].title + \"This is title\");\n        checkoutItems = [].concat(_toConsumableArray(checkoutItems), [checkItem]);\n      }\n\n      console.log(checkoutItems);\n      SetMyCheckout(checkoutItems);\n    });\n    console.log(MyCheckout);\n  }\n\n  var mapData = function mapData() {\n    shopClient.product.fetch(route.params.itemId).then(function (product) {\n      console.log(product);\n      var productData = [{\n        id: 0,\n        images: []\n      }];\n      productData = [].concat(_toConsumableArray(productData), [product]);\n      SetProduct(productData);\n    });\n  };\n\n  var ProductTile = function ProductTile(_ref2) {\n    var item = _ref2.item;\n\n    if (item.id === 0) {\n      null;\n    } else {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }, item.title), React.createElement(Image, {\n        source: {\n          uri: item.images[0].src\n        },\n        style: {\n          height: 200,\n          width: 200\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, \"Description: \"), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }\n      }, item.description), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return SetQuantity(Quantitiy + 1);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, \"Qnt: \", Quantitiy)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return AddToCart();\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }, \"Add to Cart\")));\n    }\n  };\n\n  if (Product != null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, React.createElement(FlatList, {\n      data: Product,\n      renderItem: ProductTile,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      style: {\n        paddingTop: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Edijs/Documents/GitHub/shopify-app-with-navigation/screens/ProductPage.tsx"],"names":["StatusBar","React","shopClient","ProductPage","navigation","route","useState","Product","SetProduct","Quantitiy","SetQuantity","CheckoutID","SetCheckoutID","MyCheckout","SetMyCheckout","useEffect","mapData","console","log","params","itemId","AddToCart","CreateCheckout","lineItemsToAdd","variantId","item","variants","quantity","checkoutItems","checkItem","checkout","addLineItems","then","c","lineItems","length","title","product","fetch","productData","id","images","ProductTile","uri","src","height","width","description","styles","container","paddingTop","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { FlatList, Image, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\n\r\nimport shopClient from '../constants/shopify'\r\n\r\nexport default function ProductPage({ navigation, route }) {\r\n  const [Product, SetProduct] = React.useState([])\r\n  const [Quantitiy, SetQuantity] = React.useState(1)\r\n\r\n  \r\n  const [CheckoutID, SetCheckoutID] = React.useState(\"\")\r\n  const [MyCheckout, SetMyCheckout] = React.useState([])\r\n\r\n  React.useEffect(() => {\r\n    mapData()\r\n  }, [])\r\n\r\n  console.log(route.params.itemId)\r\n  \r\n  function AddToCart() {\r\n\r\n        CreateCheckout(SetCheckoutID)\r\n        const lineItemsToAdd = [\r\n          {\r\n            variantId: item.variants,\r\n            // variantId: \"Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC8zODAwMjA4NjIxNTg3MQ==\",\r\n            quantity: Quantitiy,\r\n            // customAttributes: [{key: \"MyKey\", value: \"MyValue\"}]\r\n          }\r\n        ]\r\n          // console.log(item.variants)\r\n          let checkoutItems = []\r\n          let checkItem = {}\r\n      \r\n          shopClient.checkout.addLineItems(CheckoutID, lineItemsToAdd).then((checkout) => {\r\n            // console.log(checkout.lineItems)\r\n            for (let c = 0; c < checkout.lineItems.length; c++) {\r\n              checkItem = {title: checkout.lineItems[c].title}\r\n              console.log(checkout.lineItems[c].title + \"This is title\")\r\n              checkoutItems = [ ...checkoutItems, checkItem ] \r\n      \r\n            }\r\n      \r\n            // checkItem = {title: checkout.lineItems[0].title}\r\n            // checkoutItems = [ ...checkoutItems, checkItem ] \r\n      \r\n            console.log(checkoutItems)\r\n            SetMyCheckout(checkoutItems)\r\n      \r\n          });\r\n      \r\n          console.log(MyCheckout)\r\n        \r\n      \r\n  }\r\n\r\n  // Fetch all products in your shop and map it to a state\r\nconst mapData = () => {\r\n  // Fetching hapens here\r\n  shopClient.product.fetch(route.params.itemId).then((product) => {\r\n\r\n    console.log(product)\r\n\r\n    let productData = [{id: 0, images:[]}]\r\n\r\n\r\n    // let ProductData = {\r\n    //         title: product.title,\r\n    //         available: product.available,\r\n    //         description: product.description,\r\n    //         images: product.images[0].src,\r\n    //         id: product.id\r\n    // }\r\n\r\n    productData = [...productData, product]\r\n    SetProduct(productData)\r\n})}\r\n\r\nconst ProductTile = ({item}) => {\r\n\r\n  if(item.id === 0){\r\n      null\r\n  }else{\r\n    return(\r\n        <View>\r\n          <Text>{item.title}</Text>\r\n          <Image source={{uri: item.images[0].src}} style={{height: 200, width: 200}}/>\r\n          <Text>Description: </Text>\r\n          <Text>{item.description}</Text>\r\n\r\n          <TouchableOpacity onPress={() => SetQuantity(Quantitiy+1)}>\r\n            <Text>Qnt: {Quantitiy}</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={() => AddToCart()}>\r\n            <Text>Add to Cart</Text>\r\n          </TouchableOpacity>\r\n          \r\n        </View>\r\n    )\r\n  }\r\n}\r\n\r\n  if(Product!=null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <FlatList \r\n          data={Product}\r\n          renderItem={ProductTile}\r\n          keyExtractor={item => item.id}\r\n          style={{paddingTop: 50}}\r\n        />\r\n        <StatusBar style=\"auto\" />\r\n      </View>\r\n    );\r\n  }else{\r\n    return(\r\n      <View>\r\n\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}