{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Edijs\\\\Documents\\\\GitHub\\\\shopify-app-with-navigation\\\\screens\\\\ProductPage.tsx\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport CreateCheckout from \"../constants/checkout\";\nimport shopClient from \"../constants/shopify\";\nimport * as Linking from 'expo-linking';\nexport default function ProductPage(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      Product = _React$useState2[0],\n      SetProduct = _React$useState2[1];\n\n  var _React$useState3 = React.useState(1),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      Quantitiy = _React$useState4[0],\n      SetQuantity = _React$useState4[1];\n\n  var _React$useState5 = React.useState(\"\"),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      CheckoutID = _React$useState6[0],\n      SetCheckoutID = _React$useState6[1];\n\n  var _React$useState7 = React.useState([]),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      MyCheckout = _React$useState8[0],\n      SetMyCheckout = _React$useState8[1];\n\n  var _React$useState9 = React.useState(\"\"),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      CheckoutWebUrl = _React$useState10[0],\n      SetCheckoutWebUrl = _React$useState10[1];\n\n  React.useEffect(function () {\n    mapData();\n  }, []);\n\n  function AddToCart(item) {\n    CreateCheckout(SetCheckoutID);\n    var lineItemsToAdd = [{\n      variantId: item.variants[0].id,\n      quantity: Quantitiy\n    }];\n    var checkoutItems = [];\n    var checkItem = {};\n\n    if (CheckoutID != \"\") {\n      shopClient.checkout.addLineItems(CheckoutID, lineItemsToAdd).then(function (checkout) {\n        console.log(checkout);\n\n        for (var c = 0; c < checkout.lineItems.length; c++) {\n          checkItem = {\n            title: checkout.lineItems[c].title\n          };\n          checkoutItems = [].concat(_toConsumableArray(checkoutItems), [checkItem]);\n        }\n\n        SetCheckoutWebUrl(checkout.webUrl);\n        SetMyCheckout(checkoutItems);\n        console.log(CheckoutWebUrl);\n      });\n    } else {\n      null;\n    }\n\n    console.log(MyCheckout);\n\n    if (CheckoutWebUrl !== \"\") {\n      Linking.openURL(CheckoutWebUrl);\n    } else {\n      null;\n    }\n  }\n\n  var mapData = function mapData() {\n    shopClient.product.fetch(route.params.itemId).then(function (product) {\n      var productData = [{\n        id: 0,\n        images: []\n      }];\n      productData = [].concat(_toConsumableArray(productData), [product]);\n      SetProduct(productData);\n    });\n  };\n\n  var ProductTile = function ProductTile(_ref2) {\n    var item = _ref2.item;\n\n    if (item.id === 0) {\n      null;\n    } else {\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 9\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }\n      }, item.title), React.createElement(Image, {\n        source: {\n          uri: item.images[0].src\n        },\n        style: {\n          height: 200,\n          width: 200\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }\n      }), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }\n      }, \"Description: \"), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }\n      }, item.description), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return SetQuantity(Quantitiy + 1);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }\n      }, \"Qnt: \", Quantitiy)), React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return AddToCart(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }\n      }, \"Add to Cart\")));\n    }\n  };\n\n  if (Product != null) {\n    return React.createElement(View, {\n      style: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    }, React.createElement(FlatList, {\n      data: Product,\n      renderItem: ProductTile,\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      style: {\n        paddingTop: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }\n    }), React.createElement(StatusBar, {\n      style: \"auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }\n    });\n  }\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Edijs/Documents/GitHub/shopify-app-with-navigation/screens/ProductPage.tsx"],"names":["StatusBar","React","CreateCheckout","shopClient","Linking","ProductPage","navigation","route","useState","Product","SetProduct","Quantitiy","SetQuantity","CheckoutID","SetCheckoutID","MyCheckout","SetMyCheckout","CheckoutWebUrl","SetCheckoutWebUrl","useEffect","mapData","AddToCart","item","lineItemsToAdd","variantId","variants","id","quantity","checkoutItems","checkItem","checkout","addLineItems","then","console","log","c","lineItems","length","title","webUrl","openURL","product","fetch","params","itemId","productData","images","ProductTile","uri","src","height","width","description","styles","container","paddingTop","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\r\nimport React from 'react';\r\nimport { FlatList, Image, StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\n\r\nimport CreateCheckout from '../constants/checkout' \r\nimport shopClient from '../constants/shopify'\r\n\r\nimport * as Linking from 'expo-linking';\r\n\r\nexport default function ProductPage({ navigation, route }) {\r\n  const [Product, SetProduct] = React.useState([])\r\n  const [Quantitiy, SetQuantity] = React.useState(1)\r\n\r\n  \r\n  const [CheckoutID, SetCheckoutID] = React.useState(\"\")\r\n  const [MyCheckout, SetMyCheckout] = React.useState([])\r\n  const [CheckoutWebUrl, SetCheckoutWebUrl] = React.useState(\"\")\r\n\r\n  \r\n\r\n\r\n  React.useEffect(() => {\r\n    mapData()\r\n  }, [])\r\n\r\n  // console.log(CheckoutID)\r\n  \r\n  function AddToCart(item) {\r\n    //   console.log(item.variants[0].id)\r\n\r\n        CreateCheckout(SetCheckoutID)\r\n        const lineItemsToAdd = [\r\n          {\r\n            variantId: item.variants[0].id,\r\n            // variantId: \"Z2lkOi8vc2hvcGlmeS9Qcm9kdWN0VmFyaWFudC8zODAwMjA4NjIxNTg3MQ==\",\r\n            quantity: Quantitiy,\r\n            // customAttributes: [{key: \"MyKey\", value: \"MyValue\"}]\r\n          }\r\n        ]\r\n          // console.log(item.variants)\r\n          let checkoutItems = []\r\n          let checkItem = {}\r\n      \r\n          if (CheckoutID != \"\") {\r\n            shopClient.checkout.addLineItems(CheckoutID, lineItemsToAdd).then((checkout) => {\r\n                console.log(checkout)\r\n                for (let c = 0; c < checkout.lineItems.length; c++) {\r\n                  checkItem = {title: checkout.lineItems[c].title}\r\n                  checkoutItems = [ ...checkoutItems, checkItem ] \r\n          \r\n                }\r\n                SetCheckoutWebUrl(checkout.webUrl)\r\n                // checkItem = {title: checkout.lineItems[0].title}\r\n                // checkoutItems = [ ...checkoutItems, checkItem ] \r\n          \r\n                // console.log(checkoutItems)\r\n                SetMyCheckout(checkoutItems)\r\n                console.log(CheckoutWebUrl)\r\n          \r\n              });\r\n          }else{\r\n              null\r\n          }\r\n      \r\n          console.log(MyCheckout)\r\n          if (CheckoutWebUrl !== \"\"){\r\n            Linking.openURL(CheckoutWebUrl);\r\n          }else{\r\n            null\r\n          }\r\n\r\n        \r\n      \r\n  }\r\n\r\n  // Fetch all products in your shop and map it to a state\r\nconst mapData = () => {\r\n  // Fetching hapens here\r\n  shopClient.product.fetch(route.params.itemId).then((product) => {\r\n\r\n    // console.log(product)\r\n\r\n    let productData = [{id: 0, images:[]}]\r\n\r\n\r\n    // let ProductData = {\r\n    //         title: product.title,\r\n    //         available: product.available,\r\n    //         description: product.description,\r\n    //         images: product.images[0].src,\r\n    //         id: product.id\r\n    // }\r\n\r\n    productData = [...productData, product]\r\n    SetProduct(productData)\r\n})}\r\n\r\nconst ProductTile = ({item}) => {\r\n\r\n  if(item.id === 0){\r\n      null\r\n  }else{\r\n    return(\r\n        <View>\r\n          <Text>{item.title}</Text>\r\n          <Image source={{uri: item.images[0].src}} style={{height: 200, width: 200}}/>\r\n          <Text>Description: </Text>\r\n          <Text>{item.description}</Text>\r\n\r\n          <TouchableOpacity onPress={() => SetQuantity(Quantitiy+1)}>\r\n            <Text>Qnt: {Quantitiy}</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity onPress={() => AddToCart(item)}>\r\n            <Text>Add to Cart</Text>\r\n          </TouchableOpacity>\r\n          \r\n        </View>\r\n    )\r\n  }\r\n}\r\n\r\n  if(Product!=null) {\r\n    return (\r\n      <View style={styles.container}>\r\n        <FlatList \r\n          data={Product}\r\n          renderItem={ProductTile}\r\n          keyExtractor={item => item.id}\r\n          style={{paddingTop: 50}}\r\n        />\r\n        <StatusBar style=\"auto\" />\r\n      </View>\r\n    );\r\n  }else{\r\n    return(\r\n      <View>\r\n\r\n      </View>\r\n    )\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}